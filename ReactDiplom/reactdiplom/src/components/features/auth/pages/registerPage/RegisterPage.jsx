import React, { useState } from "react";
import { useNavigate } from "react-router-dom";
import AuthService from "../../services/AuthService";
import Alert2 from "../../../../UI/Alert";
import RoleSelector from "./RoleSelector";
import "../../styles/RegisterPage.css";

const RegisterPage = () => {
    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');
    const [roleId, setRoleId] = useState(2);
    const [error, setError] = useState('');
    const [successMessage, setSuccessMessage] = useState('');
    const [loading, setLoading] = useState(false);
    const navigate = useNavigate();

    const handleRegister = async (e) => {
        e.preventDefault();
        setLoading(true);
        setError('');
        setSuccessMessage('');

        try {
            const response = await AuthService.register({ email, password, roleId });
            if (response.status === 200) {
                setSuccessMessage("üéâ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º...");
                setTimeout(() => navigate('/login'), 2000);
            }
        } catch (err) {
            setError(err.response?.data?.message || "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏");
        } finally {
            setLoading(false);
        }
    };

    const handleCloseAlert = () => {
        setError('');
        setSuccessMessage('');
    };

    return (
        <div className="register-container">
            <div className="register-glass">

                {error && <Alert2 type="error" message={error} onClose={handleCloseAlert} />}
                {successMessage && <Alert2 type="success" message={successMessage} onClose={handleCloseAlert} />}

                <div className="register-content">
                    <div className="auth-header">
                        <img
                            src="/Logo.jpg"
                            alt="–õ–æ–≥–æ—Ç–∏–ø"
                            className="logo-spin"
                        />
                        <h1 className="gradient-text">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</h1>
                        <p className="subtitle">–°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç</p>
                    </div>

                    <form onSubmit={handleRegister} className="auth-form">
                        <div className="input-group">
                            <input
                                type="email"
                                placeholder=" "
                                value={email}
                                onChange={(e) => setEmail(e.target.value)}
                                className="floating-input"
                                required
                            />
                            <label className="floating-label">Email</label>
                        </div>

                        <div className="input-group">
                            <input
                                type="password"
                                placeholder=" "
                                value={password}
                                onChange={(e) => setPassword(e.target.value)}
                                className="floating-input"
                                required
                                minLength="6"
                            />
                            <label className="floating-label">–ü–∞—Ä–æ–ª—å</label>
                        </div>

                        <RoleSelector roleId={roleId} onRoleChange={setRoleId} />

                        <button
                            type="submit"
                            className="submit-btn"
                            disabled={loading}
                        >
                            {loading ? (
                                <div className="spinner"></div>
                            ) : (
                                <>
                                    <span>–°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç</span>
                                    <span className="arrow">‚Üí</span>
                                </>
                            )}
                        </button>
                    </form>

                    <p className="auth-footer">
                        –£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç?
                        <a href="/login" className="link"> –í–æ–π—Ç–∏ –∑–¥–µ—Å—å</a>
                    </p>
                </div>
            </div>
        </div>
    );
};

export default RegisterPage;
